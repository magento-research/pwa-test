<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CartPageRegisteredUserCheckout">
        <annotations>
            <features value="PWA"/>
            <stories value="Cart Page"/>
            <title value="Verify Registered user should be able to checkout via Cart Page"/>
            <description value="Verify Registered user should be able to checkout via Cart Page"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-35868"/>
            <group value="PWA"/>
            <group value="Smoke"/>
        </annotations>

        <before>
            <actionGroup ref="GoToCartPage" stepKey="goToCartPage"/>

            <actionGroup ref="NavigateToSignInFormFromCart" stepKey="navigateToSignInForm" />

            <actionGroup ref="CreateAccount" stepKey="enterEmailForAccount">
                <argument name="Customer" value="VeniaCustomer1"/>
            </actionGroup>

            <actionGroup ref="AssertSuccessfulSignIn" stepKey="assertUserSignIn">
                <argument name="Customer" value="VeniaCustomer1"/>
            </actionGroup>

            <actionGroup ref="GoToProductDetailsPage" stepKey="goToProductDetailsPage">
                <argument name="product" value="ValeriaTwoLayerTank"/>
            </actionGroup>

            <actionGroup ref="SetProductColorAndSizeAndQuantityOptions" stepKey="addProductToCartWithColorAndSizeAndQuantityOptions1"/>
            <actionGroup ref="TemporaryWait3" stepKey="waitForElementToLoad"/>
            <actionGroup ref="AddToCart" stepKey="addToCart1"/>

            <actionGroup ref="GoToProductDetailsPage" stepKey="goToProductDetailsPage1">
                <argument name="product" value="CarminaEarrings"/>
            </actionGroup>
            <click selector="{{VeniaProductSection.productQtyIncrease}}" stepKey="updateProductQty"/>
            <actionGroup ref="AddToCart" stepKey="addToCart2">
                <argument name="product" value="CarminaEarrings"/>
            </actionGroup>
        </before>

        <actionGroup ref="GoToCartPage" stepKey="goToCartPage"/>
        <dontSeeElement selector="{{VeniaCartPageSection.signIn}}" stepKey="dontSeeSignInLink" />
        <actionGroup ref="VerifyConfigurableProductExists" stepKey="verifyProductsExistsWithRespectiveConfiguration"/>
        <actionGroup ref="VerifySimpleProductExists" stepKey="verifySimpleProductsExists"/>

        <actionGroup ref="CartPageProceedToCheckout" stepKey="clickProceedToCheckoutButton"/>
        <actionGroup ref="AssertAuthCheckoutPage" stepKey="assertAuthUserWelcome"/>
        <actionGroup ref="EnterAuthUserShippingInfo2" stepKey="enterShippingInformation"/>
        <actionGroup ref="UpdateStateZip" stepKey="enterShippingInformationZipAndState"/>
        <actionGroup ref="SubmitAuthUserShippingInfo" stepKey="submitShippingInfo"/>
        <actionGroup ref="AssertShippingInfoDetails" stepKey="verifyShippingInformation"/>
        <actionGroup ref="AssertShippingMethodDetails" stepKey="verifyShippingMethodDetails">
            <argument name="shippingMethod" value="{{ShippingMethods.freeShipping}}"/>
        </actionGroup>
        <scrollToTopOfPage stepKey="scrollOnTopOfPage"/>
        <actionGroup ref="EditShippingInfo" stepKey="clickOnEditShippingLink"/>
        <actionGroup ref="AssertAuthAddressBookDefaults" stepKey="assertAuthAddressBookDefaultLinksLabels"/>
        <actionGroup ref="AssertAuthAddressBookShippingDetails" stepKey="assertAuthAddressBookShipping"/>
        <actionGroup ref="AddNewAddressInAddressBook" stepKey="clickONAddNewAddressLink"/>
        <actionGroup ref="EnterAuthUserShippingInfo1" stepKey="updateShippingInformationName">
            <argument name="customer" value="VeniaCustomer2"/>
        </actionGroup>
        <actionGroup ref="EnterAuthUserShippingInfo3" stepKey="updateShippingInformationStreet">
            <argument name="customer" value="VeniaCustomer2"/>
        </actionGroup>
        <actionGroup ref="UpdateStateZipAuth" stepKey="enterShippingInformationZipAndState2">
            <argument name="customer" value="VeniaCustomer2"/>
        </actionGroup>
        <actionGroup ref="SaveAddressBookShippingInfo" stepKey="clickOnAddButton"/>
        <actionGroup ref="AssertAuthAddressBookDefaults" stepKey="assertAuthAddressBookDefaultLinksLabels1"/>
        <actionGroup ref="AssertAuthAddressBookShippingDetails" stepKey="assertAuthAddressBookShipping1"/>
        <actionGroup ref="AssertAuthAddressBookShippingDetails" stepKey="assertAuthAddressBookShipping2">
            <argument name="customer" value="VeniaCustomer2"/>
        </actionGroup>
        <actionGroup ref="SubmitAuthUserShippingChanges" stepKey="clickOnApplyButton"/>
        <actionGroup ref="AssertShippingInfoDetails" stepKey="verifyUpdatedShippingInformation">
            <argument name="customer" value="AuthUserUpdatedData"/>
        </actionGroup>
        <fillField  selector="{{CheckoutPagePaymentCardInfo.cardHolderName}}" userInput="{{FakeVisaCard.cardHolderName}}" stepKey="enterCardHolderName"/>
        <actionGroup ref="EnterCardDetails" stepKey="enterPaymentDetails"/>
        <actionGroup ref="ReviewOrder" stepKey="clickOnReviewOrder"/>
        <actionGroup ref="AssertReviewOrderAuth" stepKey="assertReviewOrderIsSuccess"/>
        <dontSee userInput="Tax" stepKey="seeTaxDoesNotExists"/>
        <actionGroup ref="AssertShippingInfoDetails" stepKey="verifyUpdatedShippingInformation2">
            <argument name="customer" value="AuthUserUpdatedData"/>
        </actionGroup>
        <actionGroup ref="AssertShippingMethodDetails" stepKey="verifyShippingMethodDetails2">
            <argument name="shippingMethod" value="{{ShippingMethods.freeShipping}}"/>
        </actionGroup>
        <actionGroup ref="AssertProductDetails" stepKey="verifyProductDetails"/>
        <actionGroup ref="AssertSimpleProductDetails" stepKey="verifyProductDetails2"/>
        <actionGroup ref="PlaceOrder" stepKey="placeOrder"/>
        <actionGroup ref="AssertOrderConfirmation" stepKey="verifyOrderDetails">
            <argument name="customer" value="AuthUserUpdatedData"/>
            <argument name="shippingMethod" value="{{ShippingMethods.freeShipping}}"/>
        </actionGroup>
        <actionGroup ref="AssertProductDetails" stepKey="verifyProductDetails3"/>
        <actionGroup ref="AssertSimpleProductDetails" stepKey="verifyProductDetails4"/>

        <!--******** Once Customer Account and Order History implemented then this test can be extended to check related verification *******-->

    </test>
</tests>
